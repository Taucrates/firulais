<launch>
    <arg name="ctrl_level" default="highlevel"/>
    <arg name="dog_cameras_enabled" default="false"/>
    <arg name="publish_odom_tf" default="false"/>
    <arg name="ekf_enabled" default="true"/>
    <arg name="rviz" default="false"/>
    <arg name="laser_sensor" default="hokuyo"/>
    <arg name="move_base_enabled" default="true"/>
    <arg name="slam_enabled" default="true"/>

    <!-- Sensors initialization -->
    <include file="$(find firulais)/launch/sensors/$(arg laser_sensor).launch">
    </include>

    <include file="$(find firulais)/launch/sensors/realsense.launch">
    </include>

    <!-- Drivers initialization -->
    <node pkg="unitree_legged_real" type="firu_start" name="firulais_start" output="screen" args="$(arg ctrl_level)">
        <param name="control_level" value="$(arg ctrl_level)"/>
        <param name="publish_tf" type="bool" value="$(arg publish_odom_tf)" />
    </node>


    <include file="$(find firulais)/launch/odometry/odom2odomCovs.launch">
    </include>

    <include file="$(find firulais)/launch/odometry/imu2imuCovs.launch">
    </include>

    <!-- Pose estimation -->
    <group if="$(arg ekf_enabled)"> 
        <node pkg="robot_localization" 
            type="ekf_localization_node"
            name="ekf_local"
            clear_params="true"
            output="screen"
            respawn="true">
            <rosparam command="load" file="$(find firulais)/params/ekf_height.yaml" />

            <remap from="odometry/filtered" to="ekf_local/odom" />

        </node>

        <include file="$(find firulais)/launch/odometry/laser_scan_matcher.launch">
            <arg name="publish_odom2base_link_tf" value="false"/>
        </include>

    </group>

    <group unless="$(arg ekf_enabled)"> 

        <include file="$(find firulais)/launch/odometry/laser_scan_matcher.launch">
            <arg name="publish_odom2base_link_tf" value="true"/>
        </include>

    </group>

    <!-- Internal Cameras -->
    <group if="$(arg dog_cameras_enabled)"> 

        <include file="$(find gscam)/launch/stereo.launch">
        </include>

        <group if="$(arg rviz)"> 
            <!-- RVIZ -->    
            <node name="rviz" pkg="rviz" type="rviz" args="-d $(find unitree_legged_real)/rviz/firulais_real_cams.rviz" output="log"/>
		</group>

	</group>

    <group unless="$(arg dog_cameras_enabled)"> 

        <group if="$(arg rviz)"> 
            <!-- RVIZ -->    
            <node name="rviz" pkg="rviz" type="rviz" args="-d $(find unitree_legged_real)/rviz/firulais_real.rviz" output="log"/>
		</group>

	</group>
    
    <!-- Safety control -->
    <node pkg="firulais_behaviours" type="safety_control_node" name="safety_control_node" output="screen">
        <remap from="~twist_in" to="cmd_vel_raw"/>
        <remap from="~twist_out" to="cmd_vel"/>
        <remap from="~high_state" to="high_state"/>
        <remap from="~front_range" to="range_front"/>
        <remap from="~right_range" to="range_right"/>
        <remap from="~left_range" to="range_left"/>
    </node>

    <!-- Gmapping -->
    <group if="$(arg slam_enabled)"> 

        <include file="$(find firulais)/launch/navigation/slam_gmapping.launch">
        </include>

	</group>

    <!-- Move_base -->
    <group if="$(arg move_base_enabled)"> 

        <include file="$(find firulais)/launch/navigation/move_base.launch">
        </include>

	</group>

    
</launch>
